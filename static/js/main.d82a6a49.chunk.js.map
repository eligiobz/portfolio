{"version":3,"sources":["components/Logo.jsx","portfolioData.js","components/Cover.jsx","components/ProjectSelector.jsx","components/drumMachine/Control.jsx","components/drumMachine/Button.jsx","components/drumMachine/ButtonSet.jsx","App.jsx","index.js"],"names":["Logo","props","className","id","logo","Logos","Projects","name","shortHand","data","Cover","Math","floor","random","length","ProjectSelector","style","marginLeft","width","class","for","onChange","event","target","value","console","log","updateProject","cValue","projects","map","project","index","uuidv4","Control","useState","cTime","document","addEventListener","kkey","key","playSound","htmlFor","type","Button","getElementById","play","display","onClick","toUpperCase","src","soundPath","ButtonSet","button","App","projectId","setProjectId","renderWhat","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d82a6a49.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Logo(props) {\n  return <div className=\"logo\" id={props.logo}></div>;\n}\n\nexport default Logo;\n","export const Logos = [\"infinity\", \"pacman\", \"heart\", \"badgeribbon\", \"ship\"];\n\nexport const Projects = [\n  {\n    name: \"Covers\",\n    shortHand: \"covers\",\n    data: null\n  },\n  {\n    name: \"Drum Machine\",\n    shortHand: \"drumMachine\",\n    data: null,\n  },\n  {\n    name: \"Drum Machine 2\",\n    shortHand: \"drumMachine2\",\n    data: null,\n  },\n  {\n    name: \"Drum Machine 3\",\n    shortHand: \"drumMachine3\",\n    data: null,\n  },\n];\n","import React from \"react\";\nimport Logo from \"./Logo\";\nimport { Logos } from \"./../portfolioData\";\n\nfunction Cover(props) {\n  return (\n    <div>\n      <Logo logo={Logos[Math.floor(Math.random() * 10) % Logos.length]} />\n    </div>\n  );\n}\n\nexport default Cover;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction ProjectSelector(props) {\n  function updateValue(event) {\n    const { value, name } = event.target;\n    console.log(name + \" :: \" + value);\n    props.updateProject(value);\n  }\n\n  return (\n    <div\n      style={{ marginLeft: \"00rem\", width: \"15rem;\" }}\n      class=\"input-group mb-3\"\n    >\n      <label class=\"input-group-text\" for=\"projects\">\n        Projects\n      </label>\n      <select\n        onChange={updateValue}\n        value={props.cValue}\n        className=\"form-select\"\n        key={uuidv4()}\n        id=\"projects\"\n        name=\"selector\"\n      >\n        return\n        {props.projects.map((project, index) => {\n          return (\n            <option key={uuidv4()} id={index} value={project.shortHand}>\n              {project.name}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport default ProjectSelector;\n\n/*\n\n<div class=\"input-group mb-3\">\n  <label class=\"input-group-text\" for=\"inputGroupSelect01\">Options</label>\n  <select class=\"form-select\" id=\"inputGroupSelect01\">\n    <option selected>Choose...</option>\n    <option value=\"1\">One</option>\n    <option value=\"2\">Two</option>\n    <option value=\"3\">Three</option>\n  </select>\n</div>\n\n*/\n","import { React, useState } from \"react\";\n\nfunction Control(props) {\n  const baseBeat = 1000;\n  const baseTime = 60;\n  const [cTime, setCTime] = useState(\"-1\");\n\n  function updateTime(event) {\n    const { value, name } = event.target;\n    setCTime(value);\n    console.log(props.kkey + \" \" + cTime);\n    if (cTime >= 0) {\n      setInterval(props.sound, cTime * (baseBeat * baseTime));\n      console.log(cTime * (baseBeat * baseTime));\n    }\n  }\n  document.addEventListener(\"keydown\", function (event) {\n    if (props.kkey === event.key) {\n      props.playSound(props.kkey);\n      return;\n    }\n  });\n\n  return (\n    <div>\n      <label className=\"drumSpeed\" htmlFor={\"speed\" + props.kkey}>\n        Time\n      </label>\n      <input\n        // onChange={updateTime}\n        className=\"drumSpeed\"\n        value={cTime}\n        type=\"number\"\n        id={\"speed\" + props.kkey}\n      />\n    </div>\n  );\n}\n\nexport default Control;\n","import React from \"react\";\nimport Control from \"./Control\";\n\nfunction Button(props) {\n  function playSound(kkey) {\n    const audioEl = document.getElementById(kkey);\n    audioEl.play();\n  }\n\n  return (\n    <div style={{ display: \"inline-block\" }}>\n      <button\n        onClick={() => {\n          playSound(props.kkey);\n        }}\n        className={\"drum drum\" + props.kkey.toUpperCase()}\n      >\n        {props.kkey}\n      </button>\n      <audio id={props.kkey}>\n        <source src={props.soundPath}></source>\n      </audio>\n      <Control kkey={props.kkey} playSound={playSound} />\n    </div>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nfunction ButtonSet(props) {\n  const buttons = [\n    { kkey: \"w\", soundPath: \"./sounds/drumMachine/crash.mp3\" },\n    { kkey: \"a\", soundPath: \"./sounds/drumMachine/kick-bass.mp3\" },\n    { kkey: \"s\", soundPath: \"./sounds/drumMachine/snare.mp3\" },\n    { kkey: \"d\", soundPath: \"./sounds/drumMachine/tom-1.mp3\" },\n    { kkey: \"j\", soundPath: \"./sounds/drumMachine/tom-2.mp3\" },\n    { kkey: \"k\", soundPath: \"./sounds/drumMachine/tom-3.mp3\" },\n    { kkey: \"l\", soundPath: \"./sounds/drumMachine/tom-4.mp3\" },\n  ];\n\n  return (\n    <div className=\"drumSet\">\n      {buttons.map((button) => {\n        return (\n          <Button\n          key={Button.kkey}\n            kkey={button.kkey}\n            soundPath={button.soundPath}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ButtonSet;\n","import React, { useState } from \"react\";\nimport Cover from \"./components/Cover\";\nimport { Projects } from \"./portfolioData\";\nimport ProjectSelector from \"./components/ProjectSelector\";\nimport ButtonSet from \"./components/drumMachine/ButtonSet\";\n\nfunction App() {\n\n  const [projectId, setProjectId] = useState(\"covers\");\n\n  function updateProject(projectId) {\n    setProjectId(projectId)\n  }\n\n  function renderWhat() {\n    console.log(projectId);\n    switch (projectId) {\n      case \"covers\":\n        console.log(\"cover triggered\");\n        return(<Cover/>);\n      case \"drumMachine\":\n        console.log(\"cover triggered\");\n        return(<ButtonSet/>);\n      default:\n        break;\n    }\n  }\n\n  return (\n    <div>\n      <ProjectSelector projects={Projects} cValue={projectId} updateProject={updateProject}/>\n      {renderWhat()}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}